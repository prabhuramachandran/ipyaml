cells:

- markdown: |
    # An example IPython notebook
    
    Some introductory text.  
    
    - Some bullet points
       1. item 1 in *emph*
       2. item 2 but in **bold**
    - More bullets...



- code: |
    print("Hello world!")

  id: 0
  metadata:
    collapsed: false

- markdown: |
    ## More markdown
    
    Some math:
    
    $$
    e^{i\pi} = -1
    $$
    
    An image:
    
    ![Python logo](https://www.python.org/static/community_logos/python-logo
    -master-v3-TM.png)



- code: |
    %matplotlib inline
    from matplotlib import pyplot as plt
    
    plt.plot(range(5))

  id: 1
  metadata:
    collapsed: false

- code: |


  id: 2
  metadata:
    collapsed: true

# The lines below here may be deleted if you do not need them.
# ---------------------------------------------------------------------------
metadata:
  kernelspec:
    display_name: Python 2
    language: python
    name: python2
  language_info:
    codemirror_mode:
      name: ipython
      version: 2
    file_extension: .py
    mimetype: text/x-python
    name: python
    nbconvert_exporter: python
    pygments_lexer: ipython2
    version: 2.7.11
nbformat: 4
nbformat_minor: 0

# ---------------------------------------------------------------------------
data:
  [{execution_count: 1, outputs: [{name: stdout, output_type: stream, text: 'Hello world!
  
            '}]}, {execution_count: 3, outputs: [{data: {text/plain: '[<matplotlib.lines.Line2D
              at 0x11060edd0>]'}, execution_count: 3, metadata: {}, output_type: execute_result},
        {data: {image/png: 'iVBORw0KGgoAAAANSUhEUgAAAXkAAAEACAYAAABWLgY0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz
  
              AAALEgAACxIB0t1+/AAAFFdJREFUeJzt3X+o5PV97/Hny6Zxc8mtkBvYBu1GslHSBKymxShe7k5y
  
              KXHTEv8x2BDImn9cqsHlFkIv0kvOQriQPy5NpJS1rcleE3K7Swi6rcoNJI4Sit6iu7S62kYijbX1
  
              +IexxViKre/7x5ndjOM5Z75nzndmvjPzfMAh8+NzZt58s37Pcz9nZjZVhSRpOV0w7wEkSdPjSV6S
  
              lpgneUlaYp7kJWmJeZKXpCXmSV6Slljjk3ySC5I8keTUFvffmeSHSc4kubK9ESVJk9pJyR8Bzm52
  
              R5KDwP6qugw4DBxrYTZJ0i41OsknuQT4BPAnWyy5AbgHoKoeAy5KsreVCSVJE2ta8r8PfAHY6u2x
  
              FwPPD11/YXCbJGmOxp7kk/wGsF5VZ4AMviRJC+BtDdZcB3wyySeAdwD/Mck9VfXZoTUvAL80dP2S
  
              wW1vksQPypGkCVTVRIE9tuSr6o6q2ldV7wN+C/j+yAke4BTwWYAk1wCvVNX6Fo/X+a8vfvGLc5/B
  
              OZ1zUWd0zt19ra8XN95Y/PIvF48+unHbbkz8Ovkkh5PcMjhxPwA8l+RZ4C7g1l1NJUkr6ORJuOIK
  
              2L8fnngCPvKR3T9mk+2a86rqYeDhweW7Ru77/O7HkaTV89JLcNtt8NRTcN997Zzcz/Edr5vo9Xrz
  
              HqER52zXIsy5CDOCc+7ENOp9WHa737OjJ0tqls8nSV01XO9f//r2J/ck1LR+8SpJate0633Yjvbk
  
              JUmTm+be+1YseUmagVnW+zBLXpKmaB71PsySl6QpmVe9D7PkJall8673YZa8JLWoC/U+zJKXpBZ0
  
              qd6HWfKStEtdq/dhlrwkTair9T7MkpekCXS53odZ8pK0A4tQ78MseUlqaFHqfZglL0ljLFq9D7Pk
  
              JWkbi1jvwyx5SdrEItf7MEtekkYser0PG1vySS4EHgHePvi6r6ruGFlzALgP+NHgpu9U1ZdanlWS
  
              pmpZ6n3Y2JKvqn8FPlpVVwFXAB9Lct0mSx+pqg8PvjzBS1ooy1TvwxrtyVfVa4OLF7Lxg+Enmyyb
  
              6N8flKR5WsZ6H9ZoTz7JBUlOAy8C/ao6u8mya5OcSXJ/kg+2OqUkTcGy1vuwpiX/BnBVkl8Avpvk
  
              QFU9PLTkcWBfVb2W5CBwL3B5++NK0u4te70P29FLKKvqn5PcD/wa8PDQ7a8OXX4wyR8meVdVvTz6
  
              GGtra+cv93o9er3eBGNL0mROnoTbb4ebb4ZvfAP27Jn3RG/V7/fp9/utPFaqavsFybuB16vqn5K8
  
              A/i/wNGq+t7Qmr1VtT64fDVwsqou3eSxatzzSdI0nKv3J5+E48cXq96TUFUT/d6zyZ78e4CHBnvy
  
              jwKnqup7SQ4nuWWw5sYkTw7WfAW4aZJhJGkazu29v+99cPr0Yp3gd2tsybf6ZJa8pBla5HofNu2S
  
              l6SFs8r1PszPrpG0VIbrfdlfOdOEJS9paVjvb2XJS1p41vvWLHlJC816354lL2khWe/NWPKSFo71
  
              3pwlL2lhWO87Z8lLWgjW+2QseUmdZr3vjiUvqbOs992z5CV1jvXeHkteUqdY7+2y5CV1gvU+HZa8
  
              pLmz3qfHkpc0N9b79FnykubCep8NS17STFnvs2XJS5oZ6332xpZ8kguBR4C3D77uq6o7Nll3J3AQ
  
              +Clwc1WdaXlWSQvKep+fsSVfVf8KfLSqrgKuAD6W5LrhNUkOAvur6jLgMHBsGsNKWjzW+3w12pOv
  
              qtcGFy9k4wfDT0aW3ADcM1j7WJKLkuytqvXWJpW0UKz3bmi0J5/kgiSngReBflWdHVlyMfD80PUX
  
              BrdJWkHWe3c0Lfk3gKuS/ALw3SQHqurhSZ5wbW3t/OVer0ev15vkYSR1kPXejn6/T7/fb+WxUlU7
  
              +4bkfwCvVdX/GrrtGPBQVZ0YXH8GODC6XZOkdvp8khbDyZNw++1w6BAcPQp79sx7ouWRhKrKJN/b
  
              5NU17wZer6p/SvIO4NeBoyPLTgG3ASeSXAO84n68tBqs925rsif/HuChwZ78o8CpqvpeksNJbgGo
  
              qgeA55I8C9wF3Dq1iSV1hnvv3bfj7ZpdPZnbNdJSGK7348c9uU/bbrZrfMerpB2x3heLn10jqRH3
  
              3heTJS9pLOt9cVnykrZkvS8+S17Spqz35WDJS3oT6325WPKSzrPel48lL8l6X2KWvLTirPflZslL
  
              K8p6Xw2WvLSCrPfVYclLK8R6Xz2WvLQirPfVZMlLS856X22WvLTErHdZ8tISst51jiUvLRnrXcMs
  
              eWlJWO/ajCUvLQHrXVsZW/JJLgHuAfYCbwB/XFV3jqw5ANwH/Ghw03eq6kstzypphPWucZqU/L8B
  
              v1NVHwKuBW5L8oFN1j1SVR8efHmCl6bMelcTY0u+ql4EXhxcfjXJ08DFwDMjSyf6l8Ql7Yz1rp3Y
  
              0Z58kkuBK4HHNrn72iRnktyf5IMtzCZphPWunWr86pok7wS+DRypqldH7n4c2FdVryU5CNwLXL7Z
  
              46ytrZ2/3Ov16PV6OxxZWj3W+2rp9/v0+/1WHitVNX5R8jbgz4EHq+qrDdY/B/xqVb08cns1eT5J
  
              P3PyJNx+Oxw6BEePwp49855Is5aEqppoS7xpyX8NOLvVCT7J3qpaH1y+mo0fHi9vtlZSM9a72jB2
  
              Tz7JdcBngI8lOZ3kiSTXJzmc5JbBshuTPJnkNPAV4KYpziwtPffe1ZZG2zWtPZnbNdK2huv9+HFP
  
              7tqwm+0a3/EqdYT1rmnws2ukOXPvXdNkyUtzZL1r2ix5aQ6sd82KJS/NmPWuWbLkpRmx3jUPlrw0
  
              A9a75sWSl6bIete8WfLSlFjv6gJLXmqZ9a4useSlFlnv6hpLXmqB9a6usuSlXbLe1WWWvDQh612L
  
              wJKXJmC9a1FY8tIOWO9aNJa81JD1rkVkyUtjWO9aZJa8tA3rXYtubMknuQS4B9gLvAH8cVXducm6
  
              O4GDwE+Bm6vqTMuzSjNjvWtZNCn5fwN+p6o+BFwL3JbkA8MLkhwE9lfVZcBh4Fjrk0ozYr1rmYwt
  
              +ap6EXhxcPnVJE8DFwPPDC27gY3ap6oeS3JRkr1VtT6FmaWpsN61jHa0J5/kUuBK4LGRuy4Gnh+6
  
              /sLgNmkhWO9aVo1fXZPkncC3gSNV9eqkT7i2tnb+cq/Xo9frTfpQ0q5Z7+qifr9Pv99v5bFSVeMX
  
              JW8D/hx4sKq+usn9x4CHqurE4PozwIHR7Zok1eT5pFk4eRJuvx0OHYKjR2HPnnlPJG0uCVWVSb63
  
              acl/DTi72Ql+4BRwG3AiyTXAK+7Hq6usd62SsXvySa4DPgN8LMnpJE8kuT7J4SS3AFTVA8BzSZ4F
  
              7gJunerU0oTce9eqabRd09qTuV2jORmu9+PHPblrsexmu8Z3vGrpWe9aZX52jZaWe++SJa8lZb1L
  
              Gyx5LRXrXXozS15Lw3qX3sqS18Kz3qWtWfJaaNa7tD1LXgvJepeaseS1UKqsd2knLHktjJdegltv
  
              haeest6lpix5dV4VnDixUe/791vv0k5Y8uo0613aHUtenWS9S+2w5NU51rvUHktenWG9S+2z5NUJ
  
              1rs0HZa85sp6l6bLktfcWO/S9FnymjnrXZqdsSWf5G7gN4H1qrpik/sPAPcBPxrc9J2q+lKrU2pp
  
              WO/SbDUp+a8DHx+z5pGq+vDgyxO83sJ6l+ZjbMlX1Q+SvHfMson+FXGtButdmp+29uSvTXImyf1J
  
              PtjSY2rBWe/S/LXx6prHgX1V9VqSg8C9wOVbLV5bWzt/udfr0ev1WhhBXWO9S5Pr9/v0+/1WHitV
  
              NX7RxnbNn232i9dN1j4H/GpVvbzJfdXk+bS4zn3e+5EjcOgQHD0Ke/bMeyppsSWhqibaFm9a8mGL
  
              ffcke6tqfXD5ajZ+cLzlBK/lZ71L3TN2Tz7Jt4C/AC5P8uMkn0tyOMktgyU3JnkyyWngK8BNU5xX
  
              HeTeu9RdjbZrWnsyt2uWznC9Hz/uyV2aht1s1/iOV03EepcWg59dox1z711aHJa8GrPepcVjyasR
  
              611aTJa8tmW9S4vNkteWrHdp8VnyegvrXVoelrzexHqXloslL8B6l5aVJS/W1zfq/exZ611aNpb8
  
              CjtX77/yK/D+91vv0jKy5FeU9S6tBkt+xVjv0mqx5FeI9S6tHkt+BVjv0uqy5Jec9S6tNkt+SVnv
  
              ksCSX0rWu6RzLPklYr1LGjW25JPcDfwmsF5VV2yx5k7gIPBT4OaqOtPqlBrLepe0mSYl/3Xg41vd
  
              meQgsL+qLgMOA8damk0NWO+StjO25KvqB0neu82SG4B7BmsfS3JRkr1Vtd7WkNqc9S5pnDb25C8G
  
              nh+6/sLgNk2J9S6pqZm/umZtbe385V6vR6/Xm/UIC816l5Zfv9+n3++38lipqvGLNrZr/myzX7wm
  
              OQY8VFUnBtefAQ5stl2TpJo8n96qCk6ehCNH4NAhOHoU9uyZ91SSZiEJVZVJvrdpyWfwtZlTwG3A
  
              iSTXAK+4H98u613SpMbuySf5FvAXwOVJfpzkc0kOJ7kFoKoeAJ5L8ixwF3DrVCdeIe69S9qtRts1
  
              rT2Z2zWNDdf78eOe3KVVtpvtGt/x2jHWu6Q2+dk1HeLeu6S2WfIdYL1LmhZLfs6sd0nTZMnPifUu
  
              aRYs+Tmw3iXNiiU/Q9a7pFmz5GfEepc0D5b8lFnvkubJkp8i613SvFnyU2C9S+oKS75l1rukLrHk
  
              W2K9S+oiS74F1rukrrLkd8F6l9R1lvyErHdJi8CS3yHrXdIiseR3wHqXtGgalXyS65M8k+Rvk/zu
  
              JvcfSPJKkicGX7/X/qjzY71LWlRjSz7JBcAfAP8V+AfgL5PcV1XPjCx9pKo+OYUZ58p6l7TImpT8
  
              1cAPq+rvqup14E+BGzZZN9E/MttV1rukZdBkT/5i4Pmh63/Pxol/1LVJzgAvAF+oqrMtzDcX1ruk
  
              ZdHWq2seB/ZV1ZVsbO3c29LjzpT1LmnZNCn5F4B9Q9cvGdx2XlW9OnT5wSR/mORdVfXy6IOtra2d
  
              v9zr9ej1ejsceTpeemmj3p96ynqXNF/9fp9+v9/KY6Wqtl+Q/BzwN2z84vUfgf8HfLqqnh5as7eq
  
              1geXrwZOVtWlmzxWjXu+WauCkyfhyBE4dAiOHoU9e+Y9lST9TBKqaqLfe44t+ar69ySfB77LxvbO
  
              3VX1dJLDG3fXHwE3Jvlt4HXgX4CbJhlm1qx3SctubMm3+mQdKXnrXdIimWrJLxvrXdIqWZnPrjn3
  
              ypkrroD9+33ljKTVsBIlb71LWlVLXfLWu6RVt7Qlb71L0hKWvPUuST+zVCVvvUvSmy1FyVvvkrS5
  
              hS95612StrawJW+9S9J4C1ny1rskNbNQJW+9S9LOLEzJW++StHOdL3nrXZIm1+mSt94laXc6WfLW
  
              uyS1o3Mlb71LUns6U/LWuyS1rxMlb71L0nQ0Kvkk1yd5JsnfJvndLdbcmeSHSc4kubLJ41rvkjRd
  
              Y0/ySS4A/gD4OPAh4NNJPjCy5iCwv6ouAw4Dx8Y97ksvwac+BWtrG/X+5S935x/T7vf78x6hEeds
  
              1yLMuQgzgnN2SZOSvxr4YVX9XVW9DvwpcMPImhuAewCq6jHgoiR7N3uwRaj3Rfk/3jnbtQhzLsKM
  
              4Jxd0mRP/mLg+aHrf8/GiX+7NS8MblsffbBPfcq9d0malZn/4nX/fvjmN7uzNSNJyyxVtf2C5Bpg
  
              raquH1z/70BV1ZeH1hwDHqqqE4PrzwAHqmp95LG2fzJJ0qaqKpN8X5OS/0vg/UneC/wj8FvAp0fW
  
              nAJuA04Mfii8MnqC382QkqTJjD3JV9W/J/k88F02flF7d1U9neTwxt31R1X1QJJPJHkW+CnwuemO
  
              LUlqYux2jSRpcU3lYw2m9eapto2bM8mBJK8keWLw9XtzmPHuJOtJ/mqbNV04ltvO2ZFjeUmS7yd5
  
              KslfJ7l9i3VzPZ5N5uzI8bwwyWNJTg9m/Z9brJv38Rw7ZxeO52COCwbPf2qL+3d+LKuq1S82fnA8
  
              C7wX+HngDPCBkTUHgfsHlz8CPNr2HC3NeQA4NevZRmb4z8CVwF9tcf/cj2XDObtwLH8RuHJw+Z3A
  
              33T0z2aTOed+PAdz/IfB//4c8ChwXdeOZ8M5u3I8/xvwzc1mmfRYTqPkW33z1BQ1mRNgrr8srqof
  
              AD/ZZkkXjmWTOWH+x/LFqjozuPwq8DQb7+cYNvfj2XBOmPPxBKiq1wYXL2QjnEb/DMz9eA6ee9yc
  
              MOfjmeQS4BPAn2yxZKJjOY2T/GZvnhr9A7rVm6dmqcmcANcO/mp0f5IPzma0HenCsWyqM8cyyaVs
  
              /M3jsZG7OnU8t5kTOnA8B9sLp4EXgX5VnR1Z0onj2WBOmP/x/H3gC8BWvyid6Fh25qOGO+pxYF9V
  
              XcnG5/fcO+d5FllnjmWSdwLfBo4MSrmTxszZieNZVW9U1VXAJcB/SXJgHnOM02DOuR7PJL8BrA/+
  
              Bhda/FvFNE7yLwD7hq5fMrhtdM0vjVkzbWPnrKpXz/01r6oeBH4+ybtmN2IjXTiWY3XlWCZ5Gxsn
  
              zm9U1X2bLOnE8Rw3Z1eO59A8/wzcD/zayF2dOJ7nbDVnB47ndcAnk/wI+D/AR5PcM7JmomM5jZP8
  
              +TdPJXk7G2+eGv1N8Sngs3D+HbWbvnlqysbOObzfleRqNl5y+vJsx9x4erb+yd6FY3nOlnN26Fh+
  
              DThbVV/d4v6uHM9t5+zC8Uzy7iQXDS6/A/h1Nl7AMGzux7PJnPM+nlV1R1Xtq6r3sXEu+n5VfXZk
  
              2UTHsvXPrqkFefNUkzmBG5P8NvA68C/ATbOeM8m3gB7wn5L8GPgi8HY6dCybzEk3juV1wGeAvx7s
  
              zxZwBxuvsOrM8WwyJx04nsB7gP+dJGz8N/SNqvpe1/5bbzIn3Tieb9HGsfTNUJK0xPzFqyQtMU/y
  
              krTEPMlL0hLzJC9JS8yTvCQtMU/ykrTEPMlL0hLzJC9JS+z/AxaKNiQJPICOAAAAAElFTkSuQmCC
  
              ', text/plain: <matplotlib.figure.Figure at 0x10ea76bd0>}, metadata: {},
          output_type: display_data}]}, {execution_count: null, outputs: []}]

